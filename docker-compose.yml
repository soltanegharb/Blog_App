services:
  db:
    image: postgres:15-alpine
    container_name: blog_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-blog}
      - POSTGRES_USER=${POSTGRES_USER:-bloguser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-blogpassword}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-bloguser} -d ${POSTGRES_DB:-blog}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: blog_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles_collected
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-your-dev-secret-key-here}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-bloguser}:${POSTGRES_PASSWORD:-blogpassword}@db:5432/${POSTGRES_DB:-blog}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,web}call itself via service name
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  static_volume:
  media_volume: